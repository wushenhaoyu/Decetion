"""
Django settings for mydjango project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

#/home/eyes/django

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-i6-589f44_6-#d#trftp6&jjd$ur!meta)p9&u1e*jl6ko4)j!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

ASGI_APPLICATION = "mydjango.asgi.application"
# Application definition

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}
INSTALLED_APPS = [

    'user',
    "video",
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles'


]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
CORS_ALLOW_CREDENTIALS = True  # 允许携带Cookie
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_ALL_ORIGINS =True
# CORS_ORIGIN_WHITELIST = (
#     '*'
# )
CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
)

ROOT_URLCONF = 'mydjango.urls'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            # '/home/dist/',  # 添加额外的模板目录
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# STATIC_URL = '/dist/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'dist')
#
# STATICFILES_DIRS = [
# os.path.join(BASE_DIR, "dist/assets"),
# ]

# settings.py
# MEDIA_ROOT = os.path.join(BASE_DIR, 'picture')
# MEDIA_URL = '/picture/'

STATIC_URL = '/assets/'
STATIC_ROOT = os.path.join(BASE_DIR, 'assets')
STATICFILES_DIRS = [
os.path.join(BASE_DIR, "dist/assets"),
]

WSGI_APPLICATION = 'mydjango.wsgi.application'


# CSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8080']
APPEND_SLASH = False
DATABASES = {

    'default': {

        'ENGINE': 'django.db.backends.mysql',  # 默认

        'NAME': 'AI',  # 连接的数据库  #一定要存在的数据库名

        'HOST': '1.13.156.137', # mysql的ip地址

        'PORT': 3306,  # mysql的端口

        'USER': 'eye',  # mysql的用户名

        'PASSWORD': 'Bravo2021.'  # mysql的密码

    }

}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]




LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




#邮箱发送信息配置
#
# # 用于发送邮件的邮箱
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_USE_TLS = True  # 是否使用TLS安全传输协议(用于在两个通信应用程序之间提供保密性和数据完整性)
# EMAIL_USE_SSL = False  # 是否使用SSL加密，qq企业邮箱要求使用，163邮箱设置为True的时候会报ssl的错误
# EMAIL_HOST = 'smtp.163.com'  # 发送邮件的邮箱的SMTP服务器，这里用的是163邮箱
# EMAIL_PORT = 25  # 发件箱的SMTP服务器端口，默认是25
# EMAIL_HOST_USER = 'Bravoeye@163.com'  # 发送邮件的邮箱地址
# EMAIL_HOST_PASSWORD = 'GKZOBAILKONLMRLI'  # 发送邮件的邮箱密码(这里使用的是授权码)
#
smtp_server = "smtp.163.com"  # SendGrid SMTP 服务器地址
smtp_port = 465  # SendGrid SMTPS 服务器端口
smtp_username = 'Bravoeye@163.com'
smtp_password = "OXSGUDMRVZOQLIKC"
from_address = "Bravoeye@163.com"
